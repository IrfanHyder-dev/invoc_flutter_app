def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 33

    compileOptions {
       // coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
//    kotlin {
//        jvmToolchain(1.8)
//        languageVersion.set(JavaLanguageVersion.of("17"))
//    }

    kotlinOptions {
        jvmTarget = '1.8'
//        apiVersion = "1.9"
//        languageVersion = "1.9"
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    lintOptions {
        disable 'InvalidPackage'
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.invoc"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug



    }

    signingConfigs {
        release {
            storePassword 'invoc2023'
            keyAlias 'invoc'
            keyPassword 'invoc2023'
            storeFile file('../app/invoc.keystore')

        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            shrinkResources false
        }

    }
}


flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.20"
//    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
//    implementation 'androidx.cardview:cardview:1.0.0'
//    testImplementation 'junit:junit:4.12'
//    androidTestImplementation 'androidx.test:runner:1.1.1'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation "androidx.core:core-splashscreen:1.0.0-alpha02"
    implementation "androidx.core:core:1.5.0-alpha05"
    implementation "androidx.core:core-ktx:1.6.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.2'
    implementation "androidx.core:core-animation:1.0.0-alpha02"
    implementation "androidx.interpolator:interpolator:1.0.0"
//    def appcompat_version = "1.3.1"
//    implementation "androidx.appcompat:appcompat:$appcompat_version"
//    // For loading and tinting drawables on older versions of the platform
//    implementation "androidx.appcompat:appcompat-resources:$appcompat_version"
    implementation "androidx.constraintlayout:constraintlayout:2.1.0"

    implementation 'com.google.android.gms:play-services-maps:18.1.0'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
//    kapt "org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.4.2"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
