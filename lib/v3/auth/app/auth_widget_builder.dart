import 'package:invoc/v3/auth/services/auth_service.dart';
import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

/// Used to create user-dependent objects that need to be accessible by all widgets.
/// This widgets should live above the [MaterialApp].
/// See [AuthWidget], a descendant widget that consumes the snapshot generated by this builder.
class AuthWidgetBuilder extends StatelessWidget {
  const AuthWidgetBuilder({ required this.builder});
  final Widget Function(BuildContext, AsyncSnapshot<UserFromFirebase>) builder;

  @override
  Widget build(BuildContext context) {
    final authService = Provider.of<AuthService>(context, listen: false);
    return StreamBuilder<UserFromFirebase>(
      stream: authService.onAuthStateChanged,
      builder:
          (BuildContext context, AsyncSnapshot<UserFromFirebase> snapshot) {
        final UserFromFirebase? user = snapshot.data;
        if (user != null) {
          return MultiProvider(
            providers: [
              Provider<UserFromFirebase>.value(value: user),
              // NOTE: Any other user-bound providers here can be added here
            ],
            child: builder(context, snapshot),
          );
        }
        return builder(context, snapshot);
      },
    );
  }
}
